import telebot, time
from telebot import util
import requests
import time
from datetime import datetime


TOKEN = 'TOKEN'
bot = telebot.TeleBot(TOKEN, threaded=True)



@bot.message_handler(commands=['start'])
def sms(message):
    user = message.chat.id
    bot.send_message(user,
        f'Привет {message.chat.first_name}!. Выбери команду /help.')
    print(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text)

@bot.message_handler(commands=['help'])
def help(message):
    print(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text)
    bot.reply_to(message,'''Список команд\n 
/adres - Информация из Росреестра по адресу\n /cadnum - Расширенная информация по кадастровому номеру
                 ''')


@bot.message_handler(commands=['cadnum'])
def cadnum(message):
    if message.text == '/cadnum':
        msg = bot.reply_to(message,'Введите кадастровый номер')
        bot.register_next_step_handler(msg, cadnum1)
        
def cadnum1(message):
    print(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text)
    kadnumber = message.text
    url= 'https://apiegrn.ru/api/cadaster/objectInfoFull'
    headers= requests.options('https://apiegrn.ru/api/cadaster/objectInfoFull').headers
    headers['Content-Type'] = 'application/json'
    headers['Token'] = 'токен апи'
    #headersAuth = headers
    #headers = {'Token': 'токен апи','Content-Type': 'application/json', 'User-Agent': 'Mozilla'}  
    payload = {f"query": kadnumber,
        "deep": 0}
    res = requests.post(url, json = payload, headers = headers)
    #print (res.json())
    if res.status_code == 200:
        n=f"{res.json()['EGRN']['details']}"
        f=n.split(',')
#         a=str()
#         for i in f:
#             #print(i + '\n')
#             i + '\n'
#             a+=i
#             #print(i)
        
        a="\n".join(f)
        splitted_text = util.split_string(a, 3000)
        for text in splitted_text:
            bot.send_message(message.chat.id, text)
        #bot.send_message(message.chat.id, a[1:-1])
    else: 
        bot.send_message(message.chat.id, 'Проверьте кадастровый номер')
    with open(f'C:/Users/мфц/PycharmProjects/helprr.xls', 'a') as file:
            #stat = [b, v, res]
            dat = str(datetime.now())
            print((message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text), dat, '\n', file=file)
        
@bot.message_handler(commands=['adres'])
def adres(message):
    if message.text == '/adres':
        msg = bot.reply_to(message,'Введите адрес')
        bot.register_next_step_handler(msg, kadastr)
        
def kadastr(message):
    print(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text)
    adres = message.text
    url= 'https://apiegrn.ru/api/cadaster/search'
    headers= requests.options('https://apiegrn.ru/api/cadaster/search').headers
    headers['Content-Type'] = 'application/json'
    headers['Token'] = 'токен апи'
    #headersAuth = headers
    #headers = {'Token': 'токен апи','Content-Type': 'application/json', 'User-Agent': 'Mozilla'}  
    payload = {"query": adres,
    "mode": "normal",
    "grouped": 0}
    res = requests.post(url, json = payload, headers = headers)
    #print (res.json())
    if res.status_code == 200:
        n=f"{res.json()['objects']}"
        f=n.split(',')
#         a=str()
#         for i in f:
#             #print(i + '\n')
#             i + '\n'
#             a+=i
#             #print(i)
        
        a="\n".join(f)
        u=a.replace('{','')
        u1=u.replace('}','')
        splitted_text = util.split_string(u1, 3000)
        for text in splitted_text:
            bot.send_message(message.chat.id, text)
        #bot.send_message(message.chat.id, u1)
    else: 
        bot.send_message(message.chat.id, 'Проверьте адрес')
    with open(f'C:/Users/мфц/PycharmProjects/helprr.xls', 'a') as file:
            #stat = [b, v, res]
            dat = str(datetime.now())
            print((message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username, message.text), dat, '\n', file=file)
# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.reply_to(message, message.text)

bot.polling(none_stop=True)
